import * as React from 'react';
import { OnChangeCallback } from 'react-toastify/dist/core/eventManager';
import { ToastContent, ToastOptions, Id, ToastContainerProps, UpdateOptions, ClearWaitingQueueParams } from 'react-toastify/dist/types';
declare const toast: {
    (content: ToastContent, options?: ToastOptions | undefined): React.ReactText;
    success: (content: ToastContent, options?: ToastOptions | undefined) => React.ReactText;
    info: (content: ToastContent, options?: ToastOptions | undefined) => React.ReactText;
    error: (content: ToastContent, options?: ToastOptions | undefined) => React.ReactText;
    warning: (content: ToastContent, options?: ToastOptions | undefined) => React.ReactText;
    dark: (content: ToastContent, options?: ToastOptions | undefined) => React.ReactText;
    warn: (content: ToastContent, options?: ToastOptions | undefined) => React.ReactText;
    /**
     * Remove toast programmaticaly
     */
    dismiss(id?: string | number | undefined): void;
    /**
     * Clear waiting queue when limit is used
     */
    clearWaitingQueue(params?: ClearWaitingQueueParams): void;
    /**
     * return true if one container is displaying the toast
     */
    isActive(id: Id): boolean;
    update(toastId: Id, options?: UpdateOptions): void;
    /**
     * Used for controlled progress bar.
     */
    done(id: Id): void;
    /**
     * Track changes. The callback get the number of toast displayed
     *
     */
    onChange(callback: OnChangeCallback): () => void;
    /**
     * Configure the ToastContainer when lazy mounted
     */
    configure(config?: ToastContainerProps): void;
    POSITION: {
        TOP_LEFT: import("react-toastify/dist/types").ToastPosition;
        TOP_RIGHT: import("react-toastify/dist/types").ToastPosition;
        TOP_CENTER: import("react-toastify/dist/types").ToastPosition;
        BOTTOM_LEFT: import("react-toastify/dist/types").ToastPosition;
        BOTTOM_RIGHT: import("react-toastify/dist/types").ToastPosition;
        BOTTOM_CENTER: import("react-toastify/dist/types").ToastPosition;
    };
    TYPE: {
        INFO: import("react-toastify/dist/types").TypeOptions;
        SUCCESS: import("react-toastify/dist/types").TypeOptions;
        WARNING: import("react-toastify/dist/types").TypeOptions;
        ERROR: import("react-toastify/dist/types").TypeOptions;
        DEFAULT: import("react-toastify/dist/types").TypeOptions;
        DARK: import("react-toastify/dist/types").TypeOptions;
    };
};
export { toast };
